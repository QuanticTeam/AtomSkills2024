services:
  postgres:
    image: mirror.gcr.io/postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: "db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "123"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 3s
      retries: 3

  pgadmin:
    image: mirror.gcr.io/dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_LISTEN_PORT: 80
    ports:
      - 15432:80
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy

  minio:
    image: mirror.gcr.io/minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server --console-address ":9001" /data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./src/backend/
    container_name: backend
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    ports:
      - '5002:8080'
      - '5003:443'
    environment:
      ConnectionString: 'Host=postgres;Port=5432;CommandTimeout=300;Database=db;User Id=postgres;Password=123;'
      ASPNETCORE_URLS: 'https://+:443;http://+:8080' 
      ASPNETCORE_Kestrel__Certificates__Default__Password: 'Welcome01_' 
      ASPNETCORE_Kestrel__Certificates__Default__Path: '/https/certificate.pfx'
      MinIoOptions__Endpoint: "minio:9000"
      MinIoOptions__AccessKey: "minioadmin"
      MinIoOptions__SecretKey: "minioadmin"
      JwtOptions__SecretKey: "secretkeysecretkeysecretkeysecretkeysecretkeysecretkeysecretkey"
      JwtOptions__ExpiresHours: "12"
    volumes:
      - ./https:/https:ro

  frontend:
    build: ./frontend
    container_name: frontend
    depends_on:
      - backend
    ports:
      - 5004:3000
      - 5005:80

  # nginx:
  #   image: mirror.gcr.io/nginx:mainline
  #   container_name: nginx
  #   volumes:
  #       - ./frontend/nginx.conf:/etc/nginx/nginx.conf
  #   ports: 
  #       - "80:80"

volumes:
  postgres-data:
  pgadmin:
  minio_storage: {}

