services:
  postgres:
    image: mirror.gcr.io/postgres:16.3
    container_name: postgres
    environment:
      POSTGRES_DB: "db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "123"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 3s
      retries: 3

  pgadmin:
    image: mirror.gcr.io/dpage/pgadmin4:8.8
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_LISTEN_PORT: 80
    ports:
      - 15432:80
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy

  minio:
    image: mirror.gcr.io/minio/minio:RELEASE.2024-06-13T22-53-53Z
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server --console-address ":9001" /data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./src/backend/
    container_name: backend
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    ports:
      - '5002:8080'
      - '5003:443'
    environment:
      ConnectionString: 'Host=postgres;Port=5432;CommandTimeout=300;Database=db;User Id=postgres;Password=123;'
      ASPNETCORE_URLS: 'https://+:443;http://+:8080' 
      ASPNETCORE_Kestrel__Certificates__Default__Password: 'Welcome01_' 
      ASPNETCORE_Kestrel__Certificates__Default__Path: '/https/certificate.pfx'
      MinIoOptions__Endpoint: "minio:9000"
      MinIoOptions__AccessKey: "minioadmin"
      MinIoOptions__SecretKey: "minioadmin"
      JwtOptions__SecretKey: "secretkeysecretkeysecretkeysecretkeysecretkeysecretkeysecretkey"
      JwtOptions__ExpiresHours: "12"
      ContentLoadOptions__FolderPath: "lessons"
      ContentLoadOptions__TraitFileTemplate: "traits*.json"
      ContentLoadOptions__TopicFileTemplate: "topic*.json"
      ContentLoadOptions__LessonFileTemplate: "lsn*.json"
      ContentLoadOptions__TaskFileTemplate: "tsk*.json"
      ContentLoadOptions__DefectDictionaryFileName: "lessons/features.json"
      AiOptions__AS_2024_ENV_AI_OFF: "false"
      AiOptions__AS_2024_ENV_HOST: "http://172.20.10.31"
      AiOptions__AS_2024_ENV_PORT: "10240"
      AiOptions__AS_2024_ENV_DICT_DIR: "./dict"
      AiOptions__AS_2024_ENV_USE_CACHE: "true"
      AiOptions__AS_2024_ENV_MIN_R: "10"
      AiOptions__AS_2024_ENV_MAX_R: "100"
      AiOptions__AS_2024_ENV_MAX_FEATURES: "10"
      AiOptions__AS_2024_ENV_MAX_CODES: "10"
      MLOptions__AS_2024_ENV_ML_OFF: "true"
      MLOptions__AS_2024_ENV_URI: http://localhost/9999
    volumes:
      - ./https:/https:ro
      - ./lessons:/App/lessons:ro

  deploy:
    image: curlimages/curl:8.8.0
    container_name: deploy
    depends_on:
      - backend
    entrypoint: curl --insecure -X 'POST' 'https://backend/Something/UploadContent' --verbose --fail
    restart: on-failure

  frontend:
    build: ./src/frontend
    container_name: frontend
    depends_on:
      - deploy
    ports:
      - 5004:443
      - 5005:80
    volumes:
      - ./https:/etc/nginx/certs/
      - ./lessons:/usr/share/nginx/assets

  ml:
    build: ./src/ml
    container_name: ml
    ports:
      - 5006:8000

volumes:
  postgres-data:
  pgadmin:
  minio_storage: {}

